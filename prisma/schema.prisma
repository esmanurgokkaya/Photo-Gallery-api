// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// Application models

model Tag {
  id     Int     @id @default(autoincrement())
  name   String  @unique
  photos Photo[]
}

model Photo {
  id        Int       @id @default(autoincrement())
  photo_url String
  // one-to-one relation: a Photo can have one Metadata record
  metadata  Metadata?
  // many-to-many with Tag (implicit join table)
  tags      Tag[]
  // many-to-many with Album (a photo can be in multiple albums)
  albums    Album[]
}

model Metadata {
  id          Int      @id @default(autoincrement())
  dimensions  String
  size        Int
  upload_date DateTime
  // foreign key to Photo (one-to-one). photoId is unique to enforce one-to-one
  photo       Photo    @relation(fields: [photoId], references: [id])
  photoId     Int      @unique
}

model Album {
  id          Int     @id @default(autoincrement())
  title       String
  description String?
  photos      Photo[]
}
